{"paragraph": "Frustration plays a crucial role in learning activities, as it has the potential to facilitate or hinder learning. Frustration arises when individuals encounter difficult tasks or obstacles that prevent them from achieving their goal. Despite the common perception that frustration is a threat that leads to poor performance, disengagement, and negative learning outcomes, several studies show its beneficial effects on learning. Frustration can be seen as an indicator that students are actively engaged with challenging material or tasks rather than being disengaged or bored. Experiencing a brief moment of frustration while learning led to better learning outcomes. However, if frustration continues for too long without being resolved, it can negatively impact learning. Prolonged frustration may cause students to become bored and disengaged from their studies. Recognizing frustration in learning is crucial to supporting students and fostering a supportive learning environment. When learning computer programming, students frequently encounter cognitive challenges when reading and understanding code. The difficulty of interpreting complex code and solving problems can be overwhelming for students, as they need to understand syntax, semantics, data structures, and error messages. These cognitive challenges can lead to feelings of frustration. This frustrating experience can affect their confidence and ability to overcome challenges. The ability to read code is crucial for learning programming, as reading and writing are interconnected processes. Students first learn to read and understand code before writing it themselves. It might be difficult for students to write their own code if they can’t read and understand existing code. Studies show that reading code takes up a significant portion of development time. In practice, students spend most of their time reading code instead of writing it. This involves understanding how the code functions, identifying and resolving problems, reviewing or enhancing existing code, and reusing it. Even experienced programmers often need to investigate and analyze sample code available online. With the rise of tools like ChatGPT, which has become increasingly popular for learning and sourcing code, strong code-reading skills are essential to evaluating whether the samples provided by ChatGPT are suitable for their needs. This research aims to infer student frustration levels based on their facial expressions while performing code reading exercises. Ekman and Friesen developed the Facial Action Coding System (FACS), which deconstructs all facial expressions into a set of basic facial movements known as action units (AUs). FACS allows researchers to objectively measure the frequency and intensity of facial expressions. All facial expressions can be described using AUs combinations. Analyzing the facial expressions of students during the code-reading exercise provides objective insight without interrupting their process. Facial action units (AUs) provide important information about a person’s emotions, intentions, and physical states, making them valuable tools in studying human cognition and associated processes. AUs have been utilized in various educational contexts, particularly in automatically detecting student engagement, assessing students’ needs in online learning environments, and monitoring their emotional states. Several studies have specifically explored the use of facial AUs to detect frustration in learning contexts. D’Mello et al. found that frustration was associated with an increase in the inner brow raiser (AU01), outer brow raiser (AU02), and dimpler (AU14). These findings highlight specific facial AUs in identifying frustration during learning activities. Grafsgaard et al. extended this research by investigating facial expressions during computer-mediated tutoring sessions. Grafsgaard et al. discovered that certain facial action units, such as brow lowering (AU04), were positively correlated with increased frustration. Additionally, they observed that the dimpler (AU14) was linked to both higher frustration levels and improved learning gains. Grafsgaard et al. study also provided valuable insights into the timing of frustration prediction, revealing that facial expressions observed in the first five minutes of tutoring sessions were significant predictors of frustration and learning outcomes at the end of the sessions. Based on prior research, there is potential for using AUs to infer frustration in learning contexts. Despite its potential, there is still limited research on inferring frustration using AUs in educational contexts, highlighting the need for further studies to explore and validate these methods across different learning scenarios. Developing such models requires significant effort and must be tailored to specific settings due to their context-sensitive features. Given these considerations, this study aims to classify frustration into five levels by analyzing the intensity of AUs in the specific context of code-reading exercises. Therefore, the contribution of these studies is shown as follows: • It proposes a five-level classification for frustration. It enables differentiation among different levels of frustration intensity and offers a practical approach for utilizing AUs to infer frustration. • It investigates how frustration evolves over time during the task and provides insights into early detection methods.", "name": "dewa", "number": "1"}
{"paragraph": "One of the cultural legacies present in many places of the world is mask. Based on interviews conducted with the younger generation of Bali, only a few of them know the types of Balinese masks. The younger generation in Bali hardly has any interest in Balinese masks. Balinese masks as one of Bali's cultural heritages should not be lost because it will affect various aspects of life in Bali. Besides being used in dance, nowadays Balinese masks are also a commodity of Balinese people who are sold as a source of economic income. The impact of a technological approach in preserving Balinese masks is considered very effective because of its rapid and efficient distribution. Various efforts to preserve Balinese masks with a technology-based approach have been conducted. Research by Khairuzzaky creates learning media related to Balinese masks with informational video format. Research by Budiarta classifying Balinese mask images using the bag of visual words model. Putri identify Balinese mask images using K-Nearest Neighbor (KNN). Unfortunately, both studies used private datasets and were not shared publicly. The latest research related to Balinese masks was conducted by Nugraha who built a mobile-based application to classify Balinese mask images on the Kaggle dataset based on deep learning with 3 architectures namely CNN, VGG16, and AlexNet. In this study, accuracy of 75%, 85%, and 70% was obtained for each architecture. Various studies related to object classification with transfer learning models reveal that it is possible to improve the accuracy obtained by the VGG 16 architecture. A comparative study by Adhinata found that MobileNet architecture surpassed VGG 16's architecture in facial recognition applications. MobileNet architecture has achieved 100% accuracy at epoch 20 while VGG 16 architecture has not achieved 100% accuracy even up to epoch 50. Although both architectures have the same accuracy of 99% in research related to fish image classification in research by Hindarto. MobileNet was found to be faster and more efficient than VGG 16 which directly affects resource usage. The use of resources in the field of technology has a crucial influence. In light of the issues raised and some earlier relevant research, this study proposes to increase the accuracy of recent research related to the classification of Balinese masks. In this study, MobileNet transfer learning architecture was used by analyzing a combination of various hyperparameters such as learning rate, batch size, optimizer, and dropout.", "name": "dewa", "number": "2"}