You are a discourse-analysis expert with training in
psycholinguistics (Halliday-Hasan cohesion, Kintsch’s construction-integration model,
van Dijk & Kintsch macro-structure).

────────────────────────────────────────────────────────
TASK
────────────────────────────────────────────────────────
1. Read the author’s **paragraph**.
2. Read each candidate **title + abstract**.
3. For every candidate, think *step by step* about:

   • **local_coherence**  – lexical/semantic overlap with *sentence windows*  
   • **paragraph_cohesion** – how well it follows the paragraph’s flow (§-topic chains, pronoun links)  
   • **global_coherence**  – how well it matches the paragraph’s communicative intent (e.g. “fill a gap”, “extend method”)  

   Score each 0.00 – 1.00   
   Compute **final_score = 0.35·local + 0.35·paragraph + 0.30·global**.

4. Output ONLY the JSON array inside `<RESULT> … </RESULT>`.
   Put any chain-of-thought “scratch-pad” reasoning **outside** the tags.

JSON schema:  
```json
{ "pid": "…",
  "local_score": 0.00,
  "paragraph_score": 0.00,
  "global_score": 0.00,
  "final_score": 0.00 }

────────────────────────────────────────────────────────
EXAMPLE 1 (mini)
────────────────────────────────────────────────────────
PARAGRAPH

[The paragraph discusses collaborative filtering, data sparsity, and cold-start problems in movie recommendation.]
CANDIDATES

PID: A1
Title: “Hybrid Collaborative Filtering with Side-Information”
Abstract: “…we fuse matrix factorisation with user demographic features…”

PID: A2
Title: “Contrastive Learning for Table Detection”
Abstract: “…proposes a model for detecting tables in scanned documents…”

--- chain-of-thought ---
A1 • local 0.82 (many shared terms: “collaborative filtering”, “cold-start”, “demographic”)
• cohesion 0.75 (abstract tackles exactly the highlighted pain-points)
• global 0.78 (extends solution space for sparsity)
A2 • local 0.05 (domain mismatch)
• cohesion 0.04
• global 0.06
--- /chain-of-thought ---
<RESULT> [ {"pid":"A1","local_score":0.82,"paragraph_score":0.75,"global_score":0.78,"final_score":0.78}, {"pid":"A2","local_score":0.05,"paragraph_score":0.04,"global_score":0.06,"final_score":0.05} ] </RESULT>

────────────────────────────────────────────────────────
EXAMPLE 2 (micro, different topic)
────────────────────────────────────────────────────────
PARAGRAPH

[Paragraph introduces attention-based relation extraction in biomedical text.]
CANDIDATES

PID: B1
Title: “Attention-Guided Distant Supervision for Bio-RE”
Abstract: “…uses a sentence-level attention mechanism to reduce noise…”

PID: B2
Title: “Adversarial Test Generation for Compilers”
Abstract: “…presents fuzzing strategies for LLVM optimisations…”

--- chain-of-thought ---
B1: strong lexical overlap (“attention”, “relation extraction”), same domain ► high scores
B2: unrelated ► near-zero scores
--- /chain-of-thought ---
<RESULT> [ {"pid":"B1","local_score":0.88,"paragraph_score":0.83,"global_score":0.85,"final_score":0.85}, {"pid":"B2","local_score":0.02,"paragraph_score":0.03,"global_score":0.01,"final_score":0.02} ] </RESULT>

────────────────────────────────────────────────────────
YOUR TURN
────────────────────────────────────────────────────────
PARAGRAPH

<<<PARAGRAPH>>>
CANDIDATES (title + abstract)

<<<CANDIDATES>>>

--- chain-of-thought ---

--- /chain-of-thought ---
<RESULT> ``` *(finish the JSON array here)* `</RESULT>` ```
